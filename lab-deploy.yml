---
- name: Deploy web application in Docker container
  hosts: localhost
  connection: local
  become: yes
  vars:
    download_url: "https://github.com/octocat/Hello-World/tarball/master"
    work_dir: "/opt/webapp"
    container_name: "nginx"
  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes
      tags: packages
 
    - name: Install Docker # changed because it fails for me
      apt:
        name: "{{item}}"
        state: latest
        update_cache: yes
      loop:
        - docker-ce
        - docker-ce-cli
        - containerd.io
 
    - name: Docker service is running
      service:
        name: docker
        state: started
        enabled: yes
      tags: docker
 
    - name: Web application user exists
      user:
        name: "{{ lookup('env', 'APP_USER') }}"
        password: "{{ lookup('env', 'APP_PASSWORD') | password_hash('sha512') }}"
        update_password: on_create
      tags: users
    
    # updated ufw policy
    - name: General ufw setup
      ufw:
        state: enabled
        policy: deny
        logging: 'on'

    # new
    - name: Allow outgoing HTTPS for downloads
      ufw:
        rule: allow
        direction: out
        port: "{{ item }}"
        proto: tcp
      tags: network
      loop:
        - 443
        - 8080

    - name: Download application archive
      get_url:
        url: "{{ download_url }}"
        dest: "/tmp/app.tar.gz"
        # now checking checksums
        checksum: sha256:9f40b519431e9754a1680244b820877ca975aa969ea4ae72798bfe3f67d0f139
      tags: download

    - name: Ensure working directory exists
      file:
        path: "{{ work_dir }}"
        state: directory
        owner: root
        group: root
        mode: '0755'
      tags: deploy
 
    - name: Extract application archive
      unarchive:
        src: "/tmp/app.tar.gz"
        dest: "{{ work_dir }}"
        remote_src: yes
      tags: deploy
 
    - name: Secret
      shell: openssl rand -hex 16 | sha512sum | awk '{print $1}' > secret.txt
      tags: token
    
    - name: Deploy index.html with embedded token
      copy:
        dest: "{{ work_dir }}/index.html"
        content: |
          <!DOCTYPE html>
          <html>
          <head><title>Vulnerable Web App</title></head>
          <body>
            <h1>Welcome</h1>
            <p>Your secret token is somewhere...</p>
          </body>
          </html>
        owner: "{{ lookup('env', 'APP_USER') }}"
        group: "{{ lookup('env', 'APP_USER') }}"
        mode: '0644'
      tags: web
 
    - name: Set permissions on work directory
      file:
        path: "{{ work_dir }}"
        state: directory
        recurse: yes
        owner: "{{ lookup('env', 'APP_USER') }}"
        group: "{{ lookup('env', 'APP_USER') }}"
        mode: '0755' # changed from '0777'
      tags: permissions

    # these two were added in order to use latest versions of Nginx safely
    - name: Install python-docker module
      pip:
        name: docker

    - name: Scan Nginx image using Trivy
      docker_container:
        name: trivy_scan
        image: aquasec/trivy:latest
        command: image --severity HIGH,CRITICAL nginx:latest
        auto_remove: true
      tags: trivy
    
    # new
    - name: Remove outgoing HTTPS rule
      ufw:
        rule: deny
        direction: out
        port: 443
        proto: tcp
      tags: network
 
    - name: Run Nginx container
      docker_container:
        name: "{{ container_name }}"
        image: nginx:latest # now using latest version
        state: started
        restart_policy: always
        ports:
          - "8080:80"
        volumes:
          - "{{ work_dir }}:/usr/share/nginx/html:ro"
      tags: docker
 
    - name: Grant passwordless sudo to app user
      copy:
        dest: "/etc/sudoers.d/{{ lookup('env', 'APP_USER') }}"
        content: "{{ lookup('env', 'APP_USER') }} ALL=(ALL) NOPASSWD:ALL"
        mode: '0440'
      tags: sudoers